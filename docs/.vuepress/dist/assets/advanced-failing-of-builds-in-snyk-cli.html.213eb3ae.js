import{r as s,o as r,c as o,b as i,a as n,F as l,e as t,d as e}from"./app.922d555a.js";import{_ as d}from"./plugin-vue_export-helper.21dcd24c.js";const c={},h=t(`<h1 id="advanced-failing-of-builds-in-snyk-cli" tabindex="-1"><a class="header-anchor" href="#advanced-failing-of-builds-in-snyk-cli" aria-hidden="true">#</a> Advanced failing of builds in Snyk CLI</h1><p>The Snyk CLI provides the following options when failing your builds:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>--severity-threshold=low|medium|high
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Only report vulnerabilities of provided level or higher.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>--fail-on=all|upgradable|patchable
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Only fail when there are vulnerabilities that can be fixed.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>--fail-on=all
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Fail when there is at least one vulnerability that can be either upgraded or patched.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>--fail-on=upgradable
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Fail when there is at least one vulnerability that can be upgraded.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>--fail-on=patchable
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Fail when there is at least one vulnerability that can be patched. If vulnerabilities do not have a fix and this option is being used, tests pass.</p><p>The Snyk CLI on its own does not have the capability natively to fail tests on more complex use cases. Here are some ways to achieve more complex pass/fail criteria.</p><h2 id="combining-security-policies-with-severity-threshold" tabindex="-1"><a class="header-anchor" href="#combining-security-policies-with-severity-threshold" aria-hidden="true">#</a> Combining security policies with --severity-threshold</h2>`,14),p={href:"https://docs.snyk.io/fixing-and-prioritizing-issues/policies",target:"_blank",rel:"noopener noreferrer"},u=e("Security policies"),b=e(" provide the capability to change the severity of a vulnerability if the severity matches specific criteria when a project is tested against an organization using that policy. You could, for example, change the severity of a vulnerability from high to low, and if you run "),g=i("code",null,"snyk test",-1),m=e(" with the CLI with"),f=t(`<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code> --severity-threshold=medium|high
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>this previously high severity vulnerability no longer fails the build.</p><p>{% hint style=&quot;info&quot; %} Security policies do not have all attributes available for criteria matching. Refer to the security policy configuration to see what is available as it is added to over time. {% endhint %}</p><p>Here is an example of <code>snyk test</code> using <code>--severity-threshold=high</code> running against a default organization with no policy applied to it.</p>`,4),v=e("BREAKING ALL THE IMAGES "),y={href:"https://gblobscdn.gitbook.com/assets%2F-MVXKdrh-jY3KDGPs8lQ%2F-MZT_W3O1oFyMAzF9g3s%2F-MZTrc0D6NjT6VlS1jmU%2Fimage.png?alt=media&token=27e0ee8c-147f-4942-ada4-08de07f67c40",target:"_blank",rel:"noopener noreferrer"},x=e("Test against a default organization with no policy applied to it"),_=t(`<p>Here is an example <code>snyk test</code> using <code>--severity-threshold=high</code> running against an organization with a policy that downgrades this particular vulnerability severity to <code>low</code>. There are no vulnerabilities found.</p><p>BREAKING ALL THE IMAGES <a href="../../.gitbook/assets/test-organization-with-policy-applied.png">Test against an organization with a policy applied</a></p><h2 id="companion-tools" tabindex="-1"><a class="header-anchor" href="#companion-tools" aria-hidden="true">#</a> Companion tools</h2><p>The following discusses use of snyk-delta or snyk-filter, open source companion tools for the Snyk CLI.</p><p>snyk-delta finds the delta of vulnerabilities between the current test and a previously monitored snapshot.</p><p>snyk-delta is available from npmjs.org, and may be pulled into your CI/CD pipeline using</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>npm install -g snyk-delta
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>snyk-filter provides for user-defined pass/fail criteria based on any available data in the <code>snyk test</code> JSON output.</p><p>snyk-filter is available from npmjs.org and may be pulled into your CI/CD pipeline using npm install</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>npm install -g snyk-filter
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="fail-current-build-only-if-new-vulnerabilities-are-being-introduced" tabindex="-1"><a class="header-anchor" href="#fail-current-build-only-if-new-vulnerabilities-are-being-introduced" aria-hidden="true">#</a> Fail current build only if new vulnerabilities are being introduced</h3><h4 id="inline-mode" tabindex="-1"><a class="header-anchor" href="#inline-mode" aria-hidden="true">#</a> Inline mode</h4><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>snyk test --json --print-deps | snyk-delta
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Possibly point to a specific snapshot by specifying org + project coordinates</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>snyk test --json --print-deps | snyk-delta --baselineOrg xxx --baselineProject xxx
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="standalone" tabindex="-1"><a class="header-anchor" href="#standalone" aria-hidden="true">#</a> Standalone</h4><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>snyk-delta --baselineOrg xxx --baselineProject xxx --currentOrg xxx --currentProject xxx
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,17),k=e("Refer to the "),w={href:"https://github.com/snyk-tech-services/snyk-delta",target:"_blank",rel:"noopener noreferrer"},I=e("snyk-delta project on GitHub"),S=e(" for more information."),j=t(`<h3 id="fail-build-for-cvss-score-higher-than" tabindex="-1"><a class="header-anchor" href="#fail-build-for-cvss-score-higher-than" aria-hidden="true">#</a> Fail build for CVSS score higher than ...</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>snyk test --json | snyk-filter -f /path/to/example-cvss-9-or-above.yml
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="custom-criteria-and-filtering" tabindex="-1"><a class="header-anchor" href="#custom-criteria-and-filtering" aria-hidden="true">#</a> Custom criteria and filtering</h3><p>snyk-filter can utilize any combination of criteria available in the <code>snyk test</code> JSON output.</p><p>You may also have different criteria for display from what will fail the build. This allows you to do things like display all vulnerabilities in the test output, while failing only on some specific criteria.</p>`,5),C=e("Refer to the "),F={href:"https://github.com/snyk-tech-services/snyk-filter",target:"_blank",rel:"noopener noreferrer"},T=e("snyk-filter project on GitHub"),L=e(" for examples and more information.");function z(E,N){const a=s("ExternalLinkIcon");return r(),o(l,null,[h,i("p",null,[i("a",p,[u,n(a)]),b,g,m]),f,i("p",null,[v,i("a",y,[x,n(a)])]),_,i("p",null,[k,i("a",w,[I,n(a)]),S]),j,i("p",null,[C,i("a",F,[T,n(a)]),L])],64)}var G=d(c,[["render",z]]);export{G as default};
