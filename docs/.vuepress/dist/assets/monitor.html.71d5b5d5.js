import{r as n,o as i,c,b as t,a,F as s,e as r,d as e}from"./app.922d555a.js";import{_ as d}from"./plugin-vue_export-helper.21dcd24c.js";const h={},p=r('<h1 id="monitor" tabindex="-1"><a class="header-anchor" href="#monitor" aria-hidden="true">#</a> Monitor</h1><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><p><code>snyk monitor [&lt;OPTIONS&gt;]</code></p><h2 id="description" tabindex="-1"><a class="header-anchor" href="#description" aria-hidden="true">#</a> Description</h2><p>The <code>snyk monitor</code> command creates a project in your Snyk account to be continuously monitored for open source vulnerabilities and license issues. After running this command, log in to the Snyk website and view your projects to see the monitor.</p><h2 id="exit-codes" tabindex="-1"><a class="header-anchor" href="#exit-codes" aria-hidden="true">#</a> Exit codes</h2><p>Possible exit codes and their meaning:</p><p><strong>0</strong>: success, snapshot created<br><strong>2</strong>: failure, try to re-run command<br><strong>3</strong>: failure, no supported projects detected</p><h2 id="configure-the-snyk-cli" tabindex="-1"><a class="header-anchor" href="#configure-the-snyk-cli" aria-hidden="true">#</a> Configure the Snyk CLI</h2>',9),l=e("You can use environment variables to configure the Snyk CLI and also set variables to configure the Snyk CLI to connect with the Snyk API. See "),u={href:"https://docs.snyk.io/features/snyk-cli/configure-the-snyk-cli",target:"_blank",rel:"noopener noreferrer"},f=e("Configure the Snyk CLI"),g=e("."),m=r('<h2 id="debug" tabindex="-1"><a class="header-anchor" href="#debug" aria-hidden="true">#</a> Debug</h2><p>Use the <code>-d</code> option to output the debug logs.</p><h2 id="options" tabindex="-1"><a class="header-anchor" href="#options" aria-hidden="true">#</a> Options</h2><p>See also subsequent sections for options for specific build environments, package managers, languages, and <code>[&lt;CONTEXT-SPECIFIC OPTIONS&gt;]</code> which you specify last.</p><h3 id="all-projects" tabindex="-1"><a class="header-anchor" href="#all-projects" aria-hidden="true">#</a> <code>--all-projects</code></h3><p>Auto-detect all projects in the working directory (including Yarn workspaces).</p>',6),y=e("For more information see the article "),b={href:"https://support.snyk.io/hc/en-us/articles/360000910577-Does-the-Snyk-CLI-support-monorepos-or-multiple-manifest-files-",target:"_blank",rel:"noopener noreferrer"},_=e("Does the Snyk CLI support monorepos or multiple manifest files?"),j=e("."),k=r('<h3 id="detection-depth-depth" tabindex="-1"><a class="header-anchor" href="#detection-depth-depth" aria-hidden="true">#</a> <code>--detection-depth=&lt;DEPTH&gt;</code></h3><p>Use with <code>--all-projects</code> or <code>--yarn-workspaces</code> to indicate how many sub-directories to search. <code>DEPTH</code> must be a number.</p><p>Default: 4 (the current working directory and 3 sub-directories).</p><p>Example: <code>--detection-depth=3</code> limits search to the specified directory (or the current directory if no <code>&lt;PATH&gt;</code> is specified) plus two levels of subdirectories.</p><h3 id="exclude-directory-directory" tabindex="-1"><a class="header-anchor" href="#exclude-directory-directory" aria-hidden="true">#</a> <code>--exclude=&lt;DIRECTORY&gt;[,&lt;DIRECTORY&gt;]...&gt;</code></h3><p>Can be used with <code>--all-projects</code> and <code>--yarn-workspaces</code> to indicate sub-directories and files to exclude. Must be comma separated.</p><p>Use the <code>--exclude</code> option with <code>--detection-depth</code> to ignore directories at any depth.</p><h3 id="prune-repeated-subdependencies-p" tabindex="-1"><a class="header-anchor" href="#prune-repeated-subdependencies-p" aria-hidden="true">#</a> <code>--prune-repeated-subdependencies</code>, <code>-p</code></h3><p>Prune dependency trees, removing duplicate sub-dependencies.</p><p>Continues to find all vulnerabilities, but may not find all of the vulnerable paths.</p><h3 id="print-deps" tabindex="-1"><a class="header-anchor" href="#print-deps" aria-hidden="true">#</a> <code>--print-deps</code></h3><p>Print the dependency tree before sending it for analysis.</p><h3 id="remote-repo-url-url" tabindex="-1"><a class="header-anchor" href="#remote-repo-url-url" aria-hidden="true">#</a> <code>--remote-repo-url=&lt;URL&gt;</code></h3><p>Set or override the remote URL for the repository that you would like to monitor.</p><h3 id="dev" tabindex="-1"><a class="header-anchor" href="#dev" aria-hidden="true">#</a> <code>--dev</code></h3><p>Include development-only dependencies. Applicable only for some package managers, for example, <code>devDependencies</code> in npm or <code>:development</code> dependencies in Gemfile.</p><p>Default: scan only production dependencies.</p><h3 id="org-org-id" tabindex="-1"><a class="header-anchor" href="#org-org-id" aria-hidden="true">#</a> <code>--org=&lt;ORG_ID&gt;</code></h3><p>Specify the <code>&lt;ORG_ID&gt;</code> to run Snyk commands tied to a specific organization. The <code>&lt;ORG_ID&gt;</code> influences some features availability and private test limits.</p><p>If you have multiple organizations, you can set a default from the CLI using:</p><p><code>$ snyk config set org=&lt;ORG_</code>ID<code>&gt;</code></p><p>Set a default to ensure all newly monitored projects are created under your default organization. If you need to override the default, use the <code>--org=&lt;ORG_ID&gt;</code> option.</p>',22),x=e("Default: "),v=t("code",null,"<ORG_ID>",-1),I=e(" that is the current preferred organization in your "),T={href:"https://app.snyk.io/account",target:"_blank",rel:"noopener noreferrer"},E=e("Account settings"),S=e("."),w=e("For more information see the article "),C={href:"https://support.snyk.io/hc/en-us/articles/360000920738-How-to-select-the-organization-to-use-in-the-CLI",target:"_blank",rel:"noopener noreferrer"},O=e("How to select the organization to use in the CLI"),A=e("."),N=r('<h3 id="file-file" tabindex="-1"><a class="header-anchor" href="#file-file" aria-hidden="true">#</a> <code>--file=&lt;FILE&gt;</code></h3><p>Specify a package file.</p><p>When testing locally or monitoring a project, you can specify the file that Snyk should inspect for package information. When the file is not specified, Snyk tries to detect the appropriate file for your project.</p><h3 id="package-manager-package-manager-name" tabindex="-1"><a class="header-anchor" href="#package-manager-package-manager-name" aria-hidden="true">#</a> <code>--package-manager=&lt;PACKAGE_MANAGER_NAME&gt;</code></h3><p>Specify the name of the package manager when the filename specified with the <code>--file=&lt;FILE&gt;</code> option is not standard. This allows Snyk to find the file.</p><p>Example: <code>$ snyk monitor --file=req.txt --package-manager=pip</code></p><h3 id="ignore-policy" tabindex="-1"><a class="header-anchor" href="#ignore-policy" aria-hidden="true">#</a> <code>--ignore-policy</code></h3><p>Ignore all set policies, the current policy in the <code>.snyk</code> file, Org level ignores, and the project policy on snyk.io.</p><h3 id="trust-policies" tabindex="-1"><a class="header-anchor" href="#trust-policies" aria-hidden="true">#</a> <code>--trust-policies</code></h3><p>Apply and use ignore rules from the Snyk policies your dependencies; otherwise ignore rules in the dependencies are only shown as a suggestion.</p><h3 id="project-name-project-name" tabindex="-1"><a class="header-anchor" href="#project-name-project-name" aria-hidden="true">#</a> <code>--project-name=&lt;PROJECT_NAME&gt;</code></h3><p>Specify a custom Snyk project name.</p><p>Example: <code>$ snyk monitor --project-name=my-project</code></p><h3 id="target-reference-target-reference" tabindex="-1"><a class="header-anchor" href="#target-reference-target-reference" aria-hidden="true">#</a> <code>--target-reference=&lt;TARGET_REFERENCE&gt;</code></h3>',14),R=e("Specify a reference which differentiates this project, for example, a branch name or version. Projects having the same reference can be grouped based on that reference. Only supported for Snyk Open Source. See "),P={href:"https://docs.snyk.io/snyk-cli/secure-your-projects-in-the-long-term/grouping-projects-by-branch-or-version",target:"_blank",rel:"noopener noreferrer"},L=e("Separating projects by branch or version"),D=e("."),F=r('<h3 id="policy-path-path-to-policy-file" tabindex="-1"><a class="header-anchor" href="#policy-path-path-to-policy-file" aria-hidden="true">#</a> <code>--policy-path=&lt;PATH_TO_POLICY_FILE&gt;</code></h3><p>Manually pass a path to a <code>.snyk</code> policy file.</p><h3 id="json" tabindex="-1"><a class="header-anchor" href="#json" aria-hidden="true">#</a> <code>--json</code></h3><p>Print results in JSON format.</p><h3 id="project-environment-environment-environment" tabindex="-1"><a class="header-anchor" href="#project-environment-environment-environment" aria-hidden="true">#</a> <code>--project-environment=&lt;ENVIRONMENT&gt;[,&lt;ENVIRONMENT&gt;]...&gt;</code></h3><p>Set the project environment project attribute to one or more values (comma-separated). To clear the project environment set <code>--project-environment=</code>.</p><p>Allowed values: <code>frontend, backend, internal, external, mobile, saas, onprem, hosted, distributed</code></p>',7),G=e("For more information see "),M={href:"https://docs.snyk.io/getting-started/introduction-to-snyk-projects/view-project-information/project-attributes",target:"_blank",rel:"noopener noreferrer"},U=e("Project attributes"),Y=e("."),z=t("h3",{id:"project-lifecycle-lifecycle-lifecycle",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#project-lifecycle-lifecycle-lifecycle","aria-hidden":"true"},"#"),e(),t("code",null,"--project-lifecycle=<LIFECYCLE>[,<LIFECYCLE>]...>")],-1),q=t("p",null,[e("Set the project lifecycle project attribute to one or more values (comma-separated). To clear the project lifecycle set "),t("code",null,"--project-lifecycle="),e(".")],-1),B=t("p",null,[e("Allowed values: "),t("code",null,"production, development, sandbox")],-1),V=e("For more information see "),H={href:"https://docs.snyk.io/getting-started/introduction-to-snyk-projects/view-project-information/project-attributes",target:"_blank",rel:"noopener noreferrer"},J=e("Project attributes"),W=e("."),X=t("h3",{id:"project-business-criticality-business-criticality-business-criticality",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#project-business-criticality-business-criticality-business-criticality","aria-hidden":"true"},"#"),e(),t("code",null,"--project-business-criticality=<BUSINESS_CRITICALITY>[,<BUSINESS_CRITICALITY>]...>")],-1),$=t("p",null,[e("Set the project business criticality project attribute to one or more values (comma-separated). To clear the project business criticality set "),t("code",null,"--project-business-criticality="),e(".")],-1),K=t("p",null,[e("Allowed values: "),t("code",null,"critical, high, medium, low")],-1),Q=e("For more information see "),Z={href:"https://docs.snyk.io/getting-started/introduction-to-snyk-projects/view-project-information/project-attributes",target:"_blank",rel:"noopener noreferrer"},ee=e("Project attributes"),te=e("."),oe=r('<h3 id="project-tags-tag-tag" tabindex="-1"><a class="header-anchor" href="#project-tags-tag-tag" aria-hidden="true">#</a> <code>--project-tags=&lt;TAG&gt;[,&lt;TAG&gt;]...&gt;</code></h3><p>Set the project tags to one or more values (comma-separated key value pairs with an &quot;=&quot; separator), for example, <code>--project-tags=department=finance,team=alpha</code>. To clear the project tags set <code>--project-tags=</code></p><h3 id="tags-tag-tag" tabindex="-1"><a class="header-anchor" href="#tags-tag-tag" aria-hidden="true">#</a> <code>--tags=&lt;TAG&gt;[,&lt;TAG&gt;]...&gt;</code></h3><p>This is an alias for <code>--project-tags</code>.</p><h2 id="options-for-maven-projects" tabindex="-1"><a class="header-anchor" href="#options-for-maven-projects" aria-hidden="true">#</a> Options for Maven projects</h2>',5),ae=e("For more information about Maven CLI options see "),re={href:"https://docs.snyk.io/products/snyk-open-source/language-and-package-manager-support/snyk-for-java-gradle-maven",target:"_blank",rel:"noopener noreferrer"},ne=e("Snyk for Java and Kotlin"),ie=e("."),ce=r('<h3 id="scan-all-unmanaged" tabindex="-1"><a class="header-anchor" href="#scan-all-unmanaged" aria-hidden="true">#</a> <code>--scan-all-unmanaged</code></h3><p>Auto-detect maven jars, aars, and wars in given directory. To monitor individually use <code>--file=&lt;JAR_FILE_NAME&gt;</code>.</p><p><strong>Note</strong>: Custom-built jar files, even with open source dependencies, are out of scope.</p><h3 id="reachable" tabindex="-1"><a class="header-anchor" href="#reachable" aria-hidden="true">#</a> <code>--reachable</code></h3><p>Analyze your source code to find which vulnerable functions and packages are called. Cannot be used with <code>--all-projects</code>.</p><h3 id="reachable-timeout-timeout" tabindex="-1"><a class="header-anchor" href="#reachable-timeout-timeout" aria-hidden="true">#</a> <code>--reachable-timeout=&lt;TIMEOUT&gt;</code></h3><p>Specify the amount of time (in seconds) to wait for Snyk to gather reachability data. If it takes longer than <code>&lt;TIMEOUT&gt;</code>, reachable vulnerabilities are not reported. This does not affect regular test or monitor output.</p><p>Default: 300 (5 minutes).</p><h2 id="options-for-gradle-projects" tabindex="-1"><a class="header-anchor" href="#options-for-gradle-projects" aria-hidden="true">#</a> Options for Gradle projects</h2>',9),se=e("For more information about Gradle CLI options see "),de={href:"https://docs.snyk.io/products/snyk-open-source/language-and-package-manager-support/snyk-for-java-gradle-maven",target:"_blank",rel:"noopener noreferrer"},he=e("Snyk for Java and Kotlin"),pe=e("."),le=r('<h3 id="sub-project-name-gradle-sub-project-name" tabindex="-1"><a class="header-anchor" href="#sub-project-name-gradle-sub-project-name" aria-hidden="true">#</a> <code>--sub-project=&lt;NAME&gt;</code>, <code>--gradle-sub-project=&lt;NAME&gt;</code></h3><p>For Gradle &quot;multi project&quot; configurations, monitor a specific sub-project.</p><h3 id="all-sub-projects" tabindex="-1"><a class="header-anchor" href="#all-sub-projects" aria-hidden="true">#</a> <code>--all-sub-projects</code></h3><p>For &quot;multi project&quot; configurations, monitor all sub-projects.</p><h3 id="configuration-matching-configuration-regex" tabindex="-1"><a class="header-anchor" href="#configuration-matching-configuration-regex" aria-hidden="true">#</a> <code>--configuration-matching=&lt;CONFIGURATION_REGEX&gt;</code></h3><p>Resolve dependencies using only configuration(s) that match the specified Java regular expression.</p><p>Example: <code>^releaseRuntimeClasspath$</code>.</p><h3 id="configuration-attributes-attribute-attribute" tabindex="-1"><a class="header-anchor" href="#configuration-attributes-attribute-attribute" aria-hidden="true">#</a> <code>--configuration-attributes=&lt;ATTRIBUTE&gt;[,&lt;ATTRIBUTE&gt;]...</code></h3><p>Select certain values of configuration attributes to install dependencies and perform dependency resolution.</p><p>Example: <code>buildtype:release,usage:java-runtime</code>.</p><h3 id="reachable-1" tabindex="-1"><a class="header-anchor" href="#reachable-1" aria-hidden="true">#</a> <code>--reachable</code></h3><p>Analyze your source code to find which vulnerable functions and packages are called.</p><h3 id="reachable-timeout-timeout-1" tabindex="-1"><a class="header-anchor" href="#reachable-timeout-timeout-1" aria-hidden="true">#</a> <code>--reachable-timeout=&lt;TIMEOUT&gt;</code></h3><p>Specify the amount of time (in seconds) to wait for Snyk to gather reachability data. If it takes longer than <code>&lt;TIMEOUT&gt;</code>, reachable vulnerabilities are not reported. This does not affect regular test or monitor output.</p><p>Default: 300 (5 minutes).</p><h3 id="init-script-file" tabindex="-1"><a class="header-anchor" href="#init-script-file" aria-hidden="true">#</a> <code>--init-script=&lt;FILE</code></h3><p>Use for projects that contain a Gradle initialization script.</p><h2 id="options-for-nuget-projects" tabindex="-1"><a class="header-anchor" href="#options-for-nuget-projects" aria-hidden="true">#</a> Options for NuGet projects</h2><h3 id="assets-project-name" tabindex="-1"><a class="header-anchor" href="#assets-project-name" aria-hidden="true">#</a> <code>--assets-project-name</code></h3><p>When monitoring a .NET project using NuGet <code>PackageReference</code> use the project name in <code>project.assets.json</code>, if found.</p><h3 id="packages-folder" tabindex="-1"><a class="header-anchor" href="#packages-folder" aria-hidden="true">#</a> <code>--packages-folder</code></h3><p>Specify a custom path to the packages folder.</p><h3 id="project-name-prefix-prefix-string" tabindex="-1"><a class="header-anchor" href="#project-name-prefix-prefix-string" aria-hidden="true">#</a> <code>--project-name-prefix=&lt;PREFIX_STRING&gt;</code></h3><p>When monitoring a .NET project, use this option to add a custom prefix to the name of files inside a project along with any desired separators.</p><p>Example: <code>snyk monitor --file=my-project.sln --project-name-prefix=my-group/</code></p><p>This is useful when you have multiple projects with the same name in other <code>.sln</code> files.</p><h2 id="option-for-npm-projects" tabindex="-1"><a class="header-anchor" href="#option-for-npm-projects" aria-hidden="true">#</a> Option for npm projects</h2><h3 id="strict-out-of-sync-true-false" tabindex="-1"><a class="header-anchor" href="#strict-out-of-sync-true-false" aria-hidden="true">#</a> <code>--strict-out-of-sync=true|false</code></h3><p>Control monitoring out-of-sync lockfiles.</p><p>Default: true</p><h2 id="options-for-yarn-projects" tabindex="-1"><a class="header-anchor" href="#options-for-yarn-projects" aria-hidden="true">#</a> Options for Yarn projects</h2><h3 id="strict-out-of-sync-true-false-1" tabindex="-1"><a class="header-anchor" href="#strict-out-of-sync-true-false-1" aria-hidden="true">#</a> <code>--strict-out-of-sync=true|false</code></h3><p>Control monitoring out-of-sync lockfiles.</p><p>Default: true</p><h3 id="yarn-workspaces" tabindex="-1"><a class="header-anchor" href="#yarn-workspaces" aria-hidden="true">#</a> <code>--yarn-workspaces</code></h3><p>Detect and scan Yarn workspaces. You can specify how many sub-directories to search using <code>--detection-depth</code> and exclude directories and files using <code>--exclude</code>. Alternatively scan Yarn workspaces with other projects using <code>--all-projects</code>.</p><h2 id="option-for-cocoapods-projects" tabindex="-1"><a class="header-anchor" href="#option-for-cocoapods-projects" aria-hidden="true">#</a> Option for CocoaPods projects</h2><h3 id="strict-out-of-sync-true-false-2" tabindex="-1"><a class="header-anchor" href="#strict-out-of-sync-true-false-2" aria-hidden="true">#</a> <code>--strict-out-of-sync=true|false</code></h3><p>Control monitoring out-of-sync lockfiles.</p><p>Default: false</p><h2 id="options-for-python-projects" tabindex="-1"><a class="header-anchor" href="#options-for-python-projects" aria-hidden="true">#</a> Options for Python projects</h2><h3 id="command-command" tabindex="-1"><a class="header-anchor" href="#command-command" aria-hidden="true">#</a> <code>--command=&lt;COMMAND&gt;</code></h3><p>Indicate which specific Python commands to use based on Python version. The default is <code>python</code> which executes your default python version. Run &#39;python -V&#39; to find out what version it is. If you are using multiple Python versions, use this parameter to specify the correct Python command for execution.</p><p>Default: <code>python</code> Example: <code>--command=python3</code></p><h3 id="skip-unresolved-true-false" tabindex="-1"><a class="header-anchor" href="#skip-unresolved-true-false" aria-hidden="true">#</a> <code>--skip-unresolved=true|false</code></h3><p>Allow skipping packages that are not found in the environment.</p><h2 id="options-for-c-c-projects" tabindex="-1"><a class="header-anchor" href="#options-for-c-c-projects" aria-hidden="true">#</a> Options for C/C++ projects</h2><h3 id="unmanaged" tabindex="-1"><a class="header-anchor" href="#unmanaged" aria-hidden="true">#</a> <code>--unmanaged</code></h3><p>Monitor your C/C++ project.</p>',49),ue=e("For more information see "),fe={href:"https://docs.snyk.io/products/snyk-open-source/language-and-package-manager-support/snyk-for-c-c++",target:"_blank",rel:"noopener noreferrer"},ge=e("Snyk for C/C++"),me=e("."),ye=t("h3",{id:"context-specific-options",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#context-specific-options","aria-hidden":"true"},"#"),e(),t("code",null,"-- [<CONTEXT-SPECIFIC_OPTIONS>]")],-1),be=t("p",null,"Use context-specific options to pass extra arguments directly to Gradle, Maven, or other build tools. These options are specified last.",-1),_e=t("p",null,[e("Example: "),t("code",null,"snyk monitor -- --build-cache")],-1);function je(ke,xe){const o=n("ExternalLinkIcon");return i(),c(s,null,[p,t("p",null,[l,t("a",u,[f,a(o)]),g]),m,t("p",null,[y,t("a",b,[_,a(o)]),j]),k,t("p",null,[x,v,I,t("a",T,[E,a(o)]),S]),t("p",null,[w,t("a",C,[O,a(o)]),A]),N,t("p",null,[R,t("a",P,[L,a(o)]),D]),F,t("p",null,[G,t("a",M,[U,a(o)]),Y]),z,q,B,t("p",null,[V,t("a",H,[J,a(o)]),W]),X,$,K,t("p",null,[Q,t("a",Z,[ee,a(o)]),te]),oe,t("p",null,[ae,t("a",re,[ne,a(o)]),ie]),ce,t("p",null,[se,t("a",de,[he,a(o)]),pe]),le,t("p",null,[ue,t("a",fe,[ge,a(o)]),me]),ye,be,_e],64)}var Te=d(h,[["render",je]]);export{Te as default};
